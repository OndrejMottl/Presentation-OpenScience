---
format: 
  revealjs:
    slide-number: true
    theme: [default, custom_theme.scss]
    chalkboard:
      buttons: false
    preview-links: auto
    output-file: "index"
    output-ext: "html"
---

```{r}
#| label: setup
#| include: false
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
  fig.width = 7,
  fig.height = 5,
  fig.align = "center",
  out.width = "100%"
)

if (!require("countdown")) install.packages("countdown")

library(countdown)

if (!require("here")) install.packages("here")

library(here)

include_local_figure <- function(data_source) {
  knitr::include_graphics(
    here::here(
      "materials",
      data_source
    )
  )
}


```

# [Reproducibility in Science]{.bold .r-fit-text} {.title}

Ondřej Mottl

## Research cycle

```{r}
#| label: research cycle
include_local_figure("ResearchCycle.jpg")
```

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## Reproducibility crisis

```{r}
#| label: reprodicibility crisis
include_local_figure("1a.png")
```

::: footer
[Baker, Monya. "1,500 scientists lift the lid on reproducibility." Nature 533, no. 7604 (2016).](https://doi.org/10.1038/533452a)
:::

## Evolution

```{r}
#| label: evolution
include_local_figure("openresearch.jpg")
```

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## [Exercise 1]{.r-fit-text} {.exercise .textcenter}

:::{.r-fit-text}
What is Open Science to You?
:::

`r countdown(minutes = 5)`

# Open Science

```{r}
#| label: open-science
include_local_figure("UNESCO-Open_science-pillars-en.png")
```

::: footer
[UNESCO (2022). Understanding open science — Factsheet — SC-PBS-STIP/2022/OST/1.](https://doi.org/10.54677/UTCD9302)
:::

## A better view

```{r}
#| label: open-science-taxonomy
include_local_figure("os_taxonomy.png")
```

::: footer
[https://www.fosteropenscience.eu/](https://www.fosteropenscience.eu/)
:::

## The Journey

```{r}
#| label: open-science-journey
include_local_figure("ReproducibleJourney.jpg")
```

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

# [DATA]{.bold .r-fit-text} {.title}

## FAIR Principles

Good practices for the management and administration of scientific data

:::: columns
::: {.column width="50%"}

```{r}
#| label: FAIR
include_local_figure("FAIRPrinciples.jpg")
```

:::

::: {.column width="50%"}

::: {.textcenter .bold .text-color-highlight-secondary}
"*Access as open as possible, as closed as necessary*"
:::

::: incremental
* [**F**]{.text-color-highlight-primary}indable 
* [**A**]{.text-color-highlight-primary}ccesible 
* [**I**]{.text-color-highlight-primary}nteroperable 
* [**R**]{.text-color-highlight-primary}eusable
:::

:::
::::

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## Sharing Data

Do you generate data and/or software?

:::: columns
::: {.column width="50%" .fragment}

```{r}
#| label: DOI
include_local_figure("DOI.jpg")
```

:::

::: {.column width="50%" .incremental}

* Get a permanent URL to the repository as a [**Digital Object Identifier**]{.text-color-highlight-primary} (DOI)
* Deposit them in a "stable" repository (eg. [Zenodo](https://zenodo.org/), [Figshare](https://figshare.com/), etc)
* Included an example of how to cite it in the [**README**]{.text-color-highlight-secondary} or documentation

:::
::::

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

# [CODE]{.bold .r-fit-text} {.title}

## Repoducibility ?

:::: columns
::: {.column width="60%"}

```{r}
#| label: meme-work-on-my-machine
knitr::include_graphics("https://media.makeameme.org/created/one-does-not-50b8331726.jpg")
```

:::

::: {.column width="40%" .textcenter}

<br>
<br>

*I was able to reproduce my results on **[my computer/machine]{.text-color-highlight-primary}***

Can I consider my work **[reproducible]{.text-color-highlight-secondary}**?

:::
::::

::: footer
[makeameme.org](https://media.makeameme.org/created/one-does-not-50b8331726)
:::


## Reproducibility

```{r}
#| label: reproducibility
include_local_figure("ReproducibleDefinitionGrid.jpg")
```

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## Time to change

```{r}
#| label: culture-shift
include_local_figure("CultureShift.jpg")
```

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## It is a spectrum

```{r}
#| label: rep-spectrum
knitr::include_graphics("https://raps-with-r.dev/images/repro_spectrum.png")
```

::: footer
[Roger D. Peng ,Reproducible Research in Computational Science.Science334,1226-1227(2011).DOI:10.1126/science.1213847](https://doi.org/10.1126/science.1213847)
:::

## [Exercise 2]{.r-fit-text} {.exercise .textcenter}

:::{.r-fit-text}
How reproducible is your research?

What can you do to improve it?
:::

`r countdown(minutes = 5)`

## It is a spectrum

```{r}
#| label: rep-spectrum-details
knitr::include_graphics("https://www.aalto.fi/sites/g/files/flghsv161/files/styles/o_914w_ah_n_nu/public/2022-02/Glerean_continuum_best_practices1800.png")
```

::: footer
[Getting started with reproducibility in research!](https://www.aalto.fi/en/open-science-and-research/getting-started-with-reproducibility-in-research)
:::

# [PROJECTS]{.bold .r-fit-text} {.title}

## Making a paper (compendium)

:::: columns
::: {.column width="60%"}

```{r}
#| label: compendium
include_local_figure("ResearchCompendium.jpg")
```

:::

::: {.column width="40%" .textcenter}

<br>
<br>

**[Project]{.text-color-highlight-secondary}**-oriented structure

Each paper is a single project

:::
::::

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## Project structure

```{r}
#| label: ProjectDesign
include_local_figure("ProjectDesign.jpg")
```

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## Project structure - basic {auto-animate="true"}

```{r}
#| eval: false
#| echo: true
# .
# └─my_awesome_project/
#   ├─ Data/
#   ├─ Outputs/
#   ├─ R/
#   ├─ README.md
#   ├─ LICENSE
#   └─ [project name].Rproj
```

## Project structure - more details {auto-animate="true"}

```{r}
#| eval: false
#| echo: true
# .
# └─my_awesome_project/
#   ├─ Data/
#   |   ├─ Input/
#   |   ├─ Processed/
#   |   └─ Temp/
#   ├─ Outputs/
#   |   ├─ Data/
#   |   ├─ Figures/
#   |   └─ Tables/
#   ├─ R/
#   |   ├─ ___Init_project___.R
#   |   ├─ 00_Config_file.R
#   |   ├─ 01_Data_processing/
#   |   ├─ 02_Main_analyses/
#   |   ├─ 03_Supplementary_analyses/
#   |   ├─ Functions/
#   |       └─ example_fc.R
#   ├─ README.md
#   ├─ LICENSE
#   └─ [project name].Rproj
```

## Project structure - Analysis Example {auto-animate="true"}

```{r}
#| eval: false
#| echo: true
# .
# └─my_awesome_project/
#   ├─ Data/
#   ├─ Outputs/
#   ├─ R/
#   |   ├─ ___Init_project___.R
#   |   ├─ 00_Config_file.R
#   |   ├─ 00_Master.R
#   |   ├─ 01_Data_processing/
#   |   |   ├─ 01_Prepare_pollen_data.R
#   |   |   └─ 01_Download_terrain_data.R
#   |   ├─ 02_Main_analyses/
#   |   |   ├─ 01_Vegetation_history/
#   |   |   |   ├─ 01_Estimate_dissimilarty.R
#   |   |   |   └─ 02_Summarise_dissimilarity.R
#   |   |   ├─ 02_Rate_of_change/
#   |   |   |   ├─ 01_Roc_estimation.R
#   |   |   |   ├─ 02_Roc_interpolation.R
#   |   |   ├─ 03_Temporal_patters_of_groups/
#   |   |   |   ├─ 01_Define_groups.R
#   |   |   |   ├─ 02_Temporal_patterns_of_groups.R
#   |   |   └─ 04_Visualisation/
#   |   ├─ 03_Supplementary_analyses/
#   |   └─ Functions/
#   ├─ README.md
#   ├─ LICENSE
#   └─ [project name].Rproj
```

## [Exercise 3]{.r-fit-text} {.exercise .textcenter}

::: {.r-fit-text} 
What are the cons and pros of this approach?
:::

`r countdown(minutes = 3)`

## Project structure - Tools 1

:::: columns
::: {.column width="60%"}

```{r}
#| label: rstudio-project
knitr::include_graphics("https://ecorepsci.github.io/reproducible-science/img/rstudio-project.jpg")
```

:::

::: {.column width="40%" .textcenter}

<br>
<br>

**[R-studio]{.text-color-highlight-secondary}** is doing it already by default
:::

::::

::: footer
[Reproducible Data Science](https://ecorepsci.github.io/reproducible-science/index.html)
:::

## Project structure - Tools 2

:::: columns
::: {.column width="50%" }

<br>
<br>

[@JennyBryan](https://twitter.com/JennyBryan):

::: {.blockquote}
*If the first line of your R script is*

```{r}
#| label: jenny-quote
#| eval: false
#| echo: true
#| code-line-numbers: false
setwd("C:\Users\jenny\path\that\only\I\have")
```

*I will come into your office and SET YOUR COMPUTER ON FIRE 🔥*.
:::
:::

::: {.column width="50%" .fragment}

```{r}
#| label: here-here
include_local_figure("here_pkg.png")
```

The [{here} package](https://here.r-lib.org/) is up for rescue! 

:::
::::

::: footer
Artwork by [@allison_horst](https://twitter.com/allison_horst)
:::

## Clean code

:::: columns
::: {.column width="50%" }
```{r}
#| label: ReadableCode
include_local_figure("ReadableCode.jpg")
```
:::

::: {.column width="50%" .fragment}

```{r}
#| label: wtf-per-minute
knitr::include_graphics("https://www.gilesd-j.com/wp-content/uploads/2023/01/image-1.png")
```

:::
::::

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)

[Glen Lipka](https://commadot.com/)
:::

## Code style and etiquette 

:::: columns
::: {.column width="40%"}

Create a [Code Convention]{.text-color-highlight-secondary}:

::: {.incremental}
* Script Structure
* Naming things
* Script annotation
:::

:::

::: {.column width="60%"}
:::
::::


## Code style and etiquette 

:::: columns
::: {.column width="40%"}

Create a [Code Convention]{.text-color-highlight-secondary}:

* **[Script Structure]{.text-color-highlight-primary}**
* Naming things
* Script annotation

:::

::: {.column width="60%" .fragment .textcenter}

[One script = one task]{.text-color-highlight-terciary}

```{r}
#| label: Script Structure
#| eval: false
#| echo: true
#| code-line-numbers: false
#----------------------------------------------------------#
#
#
#                     Project name 
#
#                      Script name
#                      - continue
#
#                       Authors 
#                        Year
#
#----------------------------------------------------------#

# General description of the script

#----------------------------------------------------------#
# 1. Load data -----
#----------------------------------------------------------#

#----------------------------------------------------------#
# 2. Data wrangling -----
#----------------------------------------------------------#

#--------------------------------------------------#
# 2.1. Fit model -----
#--------------------------------------------------#

#----------------------------------------------------------#
# 3. Save results -----
#----------------------------------------------------------#

```
:::
::::

## Code style and etiquette 

:::: columns
::: {.column width="40%" }

Create a [Code Convention]{.text-color-highlight-secondary}:

* *Script Structure*
* **[Naming things]{.text-color-highlight-primary}**
* Script annotation

:::

::: {.column width="60%"}

::: {.blockquote}
*There are only two hard things in Computer Science: cache invalidation and naming things.*
:::
Phil Karlton

:::
::::

## Code style and etiquette 

:::: columns
::: {.column width="40%" }

Create a [Code Convention]{.text-color-highlight-secondary}:

* *Script Structure*
* **[Naming things]{.text-color-highlight-primary}**
* Script annotation

:::

::: {.column width="60%" .textcenter} 
```{r}
#| label: case
include_local_figure("case.png")
```

Do not use "."(dot) in the object names!

:::
::::

::: footer
Artwork by [@allison_horst](https://twitter.com/allison_horst)
:::

## Code style and etiquette 

:::: columns
::: {.column width="40%" }

Create a [Code Convention]{.text-color-highlight-secondary}:

* *Script Structure*
* Naming things
* **[Script annotation]{.text-color-highlight-primary}**

:::

::: {.column width="60%"}

```{r}
#| label: code-comments
knitr::include_graphics("https://i.imgur.com/H4uaq47.jpeg")
```

:::
::::

::: footer
[r/ProgrammerHumor](https://www.reddit.com/r/ProgrammerHumor/comments/aatfvz/functional_programming_in_a_nutshell/)
:::

## Exercise 4 {.exercise}

::::: {.panel-tabset}

### Ex1

:::: columns
::: {.column width="55%"}

```{r}
#| label: style ex1
#| eval: false
#| echo: true
#| code-line-numdbers: true
x = 23; y = 12

84->childHeight 

number_of_days_since_last_accident_floor_4_lab_23 = 0
```
:::

::: {.column width="45%" .fragment}
```{r}
#| label: style ex1 - solution
#| eval: false
#| echo: true
#| code-line-numbers: true
x <- 23
y <- 12

child_height_cm <- 84

days_since_last_accident <- 0
```
:::
::::

### Ex2 

:::: columns
::: {.column width="40%"}

```{r}
#| label: style ex2
#| eval: false
#| echo: true
#| code-line-numdbers: true
Day.One = 29.07.2024

f*12+i->h

c.m(List-Test)$`col A`
```
:::

::: {.column width="60%" .fragment}
```{r}
#| label: style ex2 - solution
#| eval: false
#| echo: true
#| code-line-numbers: true
day_one <- "2024-07-29"

height <-
  (feet * 12) + inches

list_test %>%
  calculate_mean() %>%
  purrr::chuck("column_a")
```
:::
::::

### Ex3

:::: columns
::: {.column width="40%"}

```{r}
#| label: style ex3
#| eval: false
#| echo: true
#| code-line-numbers: true
function(a,
b,c,d=100) 
{
if(a<c) a<-(a/b)*d
a 
} -> std.con  
```
:::

::: {.column width="60%" .fragment}
```{r}
#| label: style ex3 - solution
#| eval: false
#| echo: true
#| code-line-numbers: true
get_standart_concentration <- function(concentration = NULL,
                                       order_magnitude = NULL,
                                       expected_concentration = NULL,
                                       number_of_iterations = 100) {
  if (
    isTRUE(concentration < expected_concentration)
  ) {
    res <-
      (concentration / order_magnitude) * number_of_iterations
  }
  return(res)
}
```
:::
::::

:::::

## 

:::{.textcenter .r-fit-text}
‼️ BE [CONSISTENT]{.text-color-highlight-secondary .bold} ‼️
:::

#### Resources 
* [The {tidyverse} style guide](https://style.tidyverse.org/index.html)
* [Google’s R Style Guide](https://google.github.io/styleguide/Rguide.html)
* [Dealing with the Second Hardest Thing in Computer Science](https://indrajeetpatil.github.io/second-hardest-cs-thing/)
  * Presentation by [Indrajeet Patil](https://sites.google.com/site/indrajeetspatilmorality/)
* [Naming Things in Code](https://youtu.be/-J3wNP6u5YU)
  * YT video by [CodeAesthetic](https://www.youtube.com/@CodeAesthetic) 
* [My personal code conventions](https://ondrejmottl.github.io/collaboration/code_convention.html)

## Self-containedness

:::: columns
::: {.column width="50%" }

<br>
<br>

Will [my code]{.text-color-highlight-secondary} run on [your]{.text-color-highlight-terciary} machine?

Will [my code]{.text-color-highlight-secondary} run [in 10 years]{.text-color-highlight-terciary}?

:::

::: {.column width="50%" .fragment .textcenter}
```{r}
#| label: renv
include_local_figure("renv.png")
```

The [{revn} package](https://rstudio.github.io/renv/index.html) will make sure it will! 

:::
::::

::: footer
Artwork by [@allison_horst](https://twitter.com/allison_horst)
:::

## Self-containedness - advanced

What if we share the [whole Operating System]{.text-color-highlight-secondary} as well?

:::: columns
::: {.column width="40%" }

```{r}
#| label: docker_logo
include_local_figure("docker_logo.png")
```

:::

::: {.column width="60%"}

```{r}
#| label: docker_scheme
knitr::include_graphics("https://www.statworx.com/wp-content/uploads/2019/02/Blog_R-script-in-docker_docker-run-1024x629.png")
```

:::
::::

::: footer
Icon by [icon-icons.com](https://icon-icons.com/icon/docker-official-logo/169250); artwork by [@statworx](https://www.statworx.com/en/)
:::

## All in code

:::: columns
::: {.column width="50%" }

```{r}
#| label: tidyverse
knitr::include_graphics("https://science.uct.ac.za/sites/default/files/content_migration/science_uct_ac_za/708/images/tidy_workflow.png")
```

:::

::: {.column width="50%"}

[Do not edit raw data!]{.bold .text-color-highlight-secondary}

* `Data/Input/Raw/`
* Data wrangling in code
* Save proceesed data (`Data/Processed/`)
* [{tidyverse}](https://www.tidyverse.org/) for data manipulation

:::
::::

::: footer
[Centre for Statistics in Ecology, the Environment and Conservation (SEEC)](https://science.uct.ac.za/seec)
:::

# [Version control]{.bold .r-fit-text} {.title}

## Ring a bell ?

```{r}
#| label: final-final
knitr::include_graphics("https://biostats-r.github.io/biostats/github/Pics/gittutorial/phd101212s.gif")
```

## What is Version Control? 🤔

```{r}
#| label: VersionControl
include_local_figure("VersionControl.jpg")
```

::: {.textcenter}
It is all about [keeping track]{.text-color-highlight-secondary} of [changes]{.text-color-highlight-terciary} 📓✍️
:::

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

## Exercise 5 {.exercise .textcenter} 

`r countdown(minutes = 3)`

:::: columns

::: {.column width="50%"}

### Do you recognize some of these questions?

* *It broke … hopefully I have a working version somewhere?*
* *Can you please send me the latest version?*
* *Which version are you using?*
* *Found a bug! Since when was it there?*
* *I am sure it used to work. When did it change?*
* *My laptop is gone. Is my thesis now gone?*

:::

::: {.column width="50%" }

### How do you keep track of changes?

```{r}
#| label: ProjectHistory
include_local_figure("ProjectHistory.jpg")
```

:::

::::

::: footer
[This image was created by Scriberia for The Turing Way community and is used under a CC-BY licence](https://zenodo.org/doi/10.5281/zenodo.3332807)
:::

##

:::: columns

::: {.column width="45%"}

### Git {.textcenter}

* local software
* keep track of changes of files 

<br>

```{r}
#| label: git-logo
#| fig-width: 1
#| fig-height: 1 
knitr::include_graphics("https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Git_icon.svg/768px-Git_icon.svg.png")
```

:::

::: {.column width="10%" }
:::

::: {.column width="45%" }

### GitHub {.textcenter}

* host server
* store (git) the data
* project management, collaboration, publishing

```{r}
#| label: github-logo
knitr::include_graphics("https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Github-desktop-logo-symbol.svg/768px-Github-desktop-logo-symbol.svg.png")
```

:::

::::

## a commit

**Commit** is a [record]{.text-color-highlight-secondary } of a change

If you create or edit a file in your repository and save the changes, you need to [record]{.text-color-highlight-secondary} your change via **commit**

::::: {.fragment}

### Chess analogy? 

:::: columns

::: {.column width="45%"}

```{r}
#| label: chess
knitr::include_graphics("https://www.wikihow.com/images/thumb/0/06/Play-Chess-Step-28-Version-5.jpg/aid54279-v4-728px-Play-Chess-Step-28-Version-5.jpg")
```

:::

::: {.column width="45%" }

**Chess move diary**:

* Bc4 (Bishop to c4)
* Nf3 (Knight to f3)
* Qc7 (Queen to c7)

:::

::::

:::::

::: footer
[wikiHow: How to Play Chess?](https://www.wikihow.com/Play-Chess)
:::

## a commit

:::: columns

::: {.column width="45%" .textcenter}

```{r}
#| label: git01
include_local_figure("git01.png")
```

*Edit line 32*

:::

::: {.column width="45%" .fragment .textcenter} 
```{r}
#| label: git1-chess
knitr::include_graphics("https://www.wikihow.com/images/thumb/c/c3/Play-Chess-Step-24-Version-5.jpg/aid54279-v4-728px-Play-Chess-Step-24-Version-5.jpg")
```

*Pawn to d4*

:::

::::

::: footer
[wikiHow: How to Play Chess?](https://www.wikihow.com/Play-Chess)
:::

## a commit

<br>
<br>

```{r}
#| label: git02
include_local_figure("git02.png")
```

## Git/GitHub setup AKA "git hell"

:::: columns



::: {.column width="45%"}

<br>

::: {.blockquote}
*Brace yourself for some pain*
:::

:::

::: {.column width="45%"}
```{r}
#| label: ErrorManagement
include_local_figure("ErrorManagement.jpg")
```
:::

::::

### Resources

* [Happy Git and GitHub for the useR](https://happygitwithr.com/install-intro)
* [biostats: Version control with GitHub and RStudio](https://biostats-r.github.io/biostats/github/1_Git_Tutorial.html)
* [Building RAP with R: Version control with Git](https://raps-with-r.dev/git.html)
* [{usethis} tutorial](https://usethis.r-lib.org/articles/usethis-setup.html#install-git)
* ... and many others

## Basic vocabulary

:::: columns

::: {.column width="40%" .incremental}

 * [R script]{.text-color-highlight-secondary} is a record of code.
 * [R Project]{.text-color-highlight-secondary} is self contained project/study/paper containg R scripts, data, figures, etc..
 * Every such project is called [repository]{.text-color-highlight-secondary} (ie a *repo*) 
 * Your **local** repository is called [local]{.text-color-highlight-secondary}
 * Your **online** repository, is called [remote]{.text-color-highlight-secondary}

:::

:::{.column width="60%" .fragment}
```{r}
#| label: local-remote
knitr::include_graphics("https://user.oc-static.com/upload/2022/01/04/16412576933806_image30.png")
```
:::

::::

::: footer
[https://openclassrooms.com/](https://openclassrooms.com/en/courses/7476131-manage-your-code-project-with-git-and-github/7681891-work-in-your-local-git-repository)
::: 

## Git init (project first)

Activate [git]{.text-color-highlight-secondary} for a repo 

::::: {.panel-tabset}

### RStudio

For existing project

```{r}
#| label: git-init-rstudio
#| echo: true
#| eval: false
#| code-line-numbers: false
usethis::use_git()
```

Create new project with git tracking

```{r}
#| label: git-init-rstudio-new
#| echo: true
#| eval: false
#| code-line-numbers: false
usethis::create_project("<DIRECTORY>")
# switch to the new project
usethis::use_git()
```


### Command line

For existing project

```{bash}
#| label: git-init-cl
#| echo: true
#| eval: false
#| code-line-numbers: false
git init
```

Create new project with git tracking

```{bash}
#| label: git-init-cl-new
#| echo: true
#| eval: false
#| code-line-numbers: false
git init <DIRECTORY>
```

### VS Code

Git integration is automatic in [Source control]{.text-color-highlight-secondary} panel

```{r}
#| label: git-init-vscode
knitr::include_graphics("https://www.sqlshack.com/wp-content/uploads/2020/07/visual-studio-code-and-git-source-control.png")
```

### GH Desktop

:::: columns

::: {.column width="60%"}

For existing project

```{r}
#| label: git-init-GH
knitr::include_graphics("https://docs.github.com/assets/cb-10757/mw-1440/images/help/desktop/add-local-repository-windows.webp")
```

:::

::: {.column width="40%"}

Create new project with git tracking

```{r}
#| label: git-init-GH-new
knitr::include_graphics("https://docs.github.com/assets/cb-143755/mw-1440/images/help/desktop/lets-get-started.webp")
```

:::

::::

:::::

::: footer
[SQLShack](https://www.sqlshack.com/visual-studio-code-vs-code-integration-with-git-source-control/)
:::

## Git clone (repo first)

Copy (download) for  [remote repo]{.text-color-highlight-secondary} 

::::: {.panel-tabset}

### RStudio

```{r}
#| label: git-clone-rstudio
#| echo: true
#| eval: false
#| code-line-numbers: false
usethis::create_from_github(
  repo_spec = "https://github.com/<OWNER>/<REPO>.git",
  destdir = "<DIRECTORY>"
  )
```

### Command line

```{bash}
#| label: git-colne-cl
#| echo: true
#| eval: false
#| code-line-numbers: false
git clone https://github.com/<OWNER>/<REPO>.git <DIRECTORY>
```

### VS Code

Open [Command Palette]{.text-color-highlight-secondary} (`Ctrl+Shift+p`)

Paste in URL: `"https://github.com/<OWNER>/<REPO>.git"`

### GH Desktop

```{r}
#| label: git-clone-GH
knitr::include_graphics("https://docs.github.com/assets/cb-10969/mw-1440/images/help/desktop/clone-file-menu-windows.webp")
```

:::::

## Staging changes

Make a change to a file and save it. Now *stage* the change:

::::: {.panel-tabset}

### RStudio

:::: columns
::: {.column width="45%"}

```{r}
#| label: git-stage-rstudio
knitr::include_graphics("https://annakrystalli.me/talks/assets/git_tab.png")
```

:::

::: {.column width="45%"}

* two yellow `??` indicates adding a file 
* a blue `M` indicates edit a file that has already been committed
* a red `D` indicates deleting a file

:::

::::

### Command line

```{bash}
#| label: git-stage-cl
#| echo: true
#| eval: false
#| code-line-numbers: false
git add <FILE>
```

### VS Code

:::: columns

::: {.column width="20%"}
:::


::: {.column width="60%"}

```{r}
#| label: git-stage-VScode
knitr::include_graphics("https://code.visualstudio.com/assets/docs/sourcecontrol/overview/stage-changes.png")
```

:::

::: {.column width="20%"}
:::

::::

### GH Desktop

:::: columns
::: {.column width="45%"}

```{r}
#| label: git-stage-GH
knitr::include_graphics("https://docs.github.com/assets/cb-16555/mw-1440/images/help/desktop/commit-all.webp")
```

:::

::: {.column width="45%"}

* The red icon indicates removed files.
* The yellow icon indicates modified files.
* The green icon indicates added files.
:::

::::

:::::

## a first commit

Commit (record) *staged* changes:

::::: {.panel-tabset}

### RStudio

### Command line

```{bash}
#| label: git-commit-cl
#| echo: true
#| eval: false
#| code-line-numbers: false
git commit -am "commit message"
```

### VS Code

### GH Desktop

:::::

# [Literate programming]{.bold .r-fit-text} {.title}

# [Functional programming]{.bold .r-fit-text} {.title}

# [Outro]{.bold .r-fit-text} {.title}

## About me

